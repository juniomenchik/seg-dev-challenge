<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/services/create_tb_customer_service.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/services/create_tb_customer_service.rb" />
              <option name="updatedContent" value="class CreateTbCustomerService&#10;  def initialize(params)&#10;    @params = params&#10;  end&#10;&#10;  def call&#10;    tb_customer = TbCustomers.new(@params)&#10;    tb_customer.createdAt = Time.now&#10;    tb_customer.updatedAt = Time.now&#10;    if tb_customer.save&#10;      { success: true, tb_customer: tb_customer }&#10;    else&#10;      { success: false, errors: tb_customer.errors }&#10;    end&#10;  end&#10;end&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/services/policies_service.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/services/policies_service.rb" />
              <option name="updatedContent" value="class PoliciesService&#10;  def self.all&#10;    TbPolicy.all&#10;  end&#10;&#10;  def self.find(id)&#10;    TbPolicy.find(id)&#10;  end&#10;&#10;  def self.create(params)&#10;    TbPolicy.create(params)&#10;  end&#10;&#10;  def self.update(policy, params)&#10;    policy.update(params)&#10;  end&#10;&#10;  def self.destroy(policy)&#10;    policy.destroy&#10;  end&#10;end&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/configure-splunk-hec.bat">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/configure-splunk-hec.bat" />
              <option name="updatedContent" value="@echo off&#10;echo Aguardando Splunk estar disponivel...&#10;&#10;set timeout=300&#10;set counter=0&#10;&#10;:wait_loop&#10;curl -s -u admin:SenhaForte123 &quot;http://localhost:8089/services/server/info&quot; &gt;nul 2&gt;&amp;1&#10;if %errorlevel% equ 0 (&#10;    echo Splunk esta pronto!&#10;    goto configure&#10;)&#10;&#10;echo Aguardando Splunk... (%counter%/%timeout% segundos)&#10;timeout /t 10 /nobreak &gt;nul&#10;set /a counter+=10&#10;&#10;if %counter% geq %timeout% (&#10;    echo Timeout aguardando Splunk iniciar&#10;    exit /b 1&#10;)&#10;&#10;goto wait_loop&#10;&#10;:configure&#10;echo Configurando HEC...&#10;&#10;echo Criando indice rails_app...&#10;docker exec splunk /opt/splunk/bin/splunk add index rails_app -auth admin:SenhaForte123 2&gt;nul || echo Indice rails_app ja existe&#10;&#10;echo Criando HEC token...&#10;docker exec splunk /opt/splunk/bin/splunk http-event-collector create -name &quot;rails_app&quot; -index rails_app -description &quot;Token para aplicacao Rails&quot; -source &quot;middleware&quot; -sourcetype &quot;_json&quot; -token &quot;32bb54a7-646a-4d3e-bf65-3cbbd9075a56&quot; -uri http://localhost:8089 -auth admin:SenhaForte123 2&gt;nul || echo HEC token ja existe&#10;&#10;echo Habilitando HEC...&#10;docker exec splunk /opt/splunk/bin/splunk http-event-collector enable -uri http://localhost:8089 -auth admin:SenhaForte123&#10;&#10;echo HEC configurado com sucesso!&#10;echo Splunk esta disponivel em: http://localhost:8000&#10;echo Usuario: admin&#10;echo Senha: SenhaForte123&#10;echo HEC Token: 32bb54a7-646a-4d3e-bf65-3cbbd9075a56&#10;&#10;pause" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/configure-splunk-hec.sh">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/configure-splunk-hec.sh" />
              <option name="updatedContent" value="#!/bin/bash&#10;&#10;echo &quot;Aguardando Splunk estar disponível...&quot;&#10;&#10;# Aguarda o Splunk estar pronto&#10;timeout=300&#10;counter=0&#10;while [ $counter -lt $timeout ]; do&#10;    if curl -s -u admin:SenhaForte123 &quot;http://localhost:8089/services/server/info&quot; &gt; /dev/null 2&gt;&amp;1; then&#10;        echo &quot;Splunk está pronto!&quot;&#10;        break&#10;    fi&#10;    echo &quot;Aguardando Splunk... ($counter/$timeout segundos)&quot;&#10;    sleep 10&#10;    counter=$((counter + 10))&#10;done&#10;&#10;if [ $counter -ge $timeout ]; then&#10;    echo &quot;Timeout aguardando Splunk iniciar&quot;&#10;    exit 1&#10;fi&#10;&#10;echo &quot;Configurando HEC...&quot;&#10;&#10;# Cria o índice rails_app&#10;docker exec splunk /opt/splunk/bin/splunk add index rails_app -auth admin:SenhaForte123 2&gt;/dev/null || echo &quot;Índice rails_app já existe&quot;&#10;&#10;# Cria o HEC token&#10;docker exec splunk /opt/splunk/bin/splunk http-event-collector create \&#10;  -name &quot;rails_app&quot; \&#10;  -index rails_app \&#10;  -description &quot;Token para aplicação Rails&quot; \&#10;  -source &quot;middleware&quot; \&#10;  -sourcetype &quot;_json&quot; \&#10;  -token &quot;32bb54a7-646a-4d3e-bf65-3cbbd9075a56&quot; \&#10;  -uri http://localhost:8089 \&#10;  -auth admin:SenhaForte123 2&gt;/dev/null || echo &quot;HEC token já existe&quot;&#10;&#10;# Habilita o HEC&#10;docker exec splunk /opt/splunk/bin/splunk http-event-collector enable -uri http://localhost:8089 -auth admin:SenhaForte123&#10;&#10;echo &quot;HEC configurado com sucesso!&quot;&#10;echo &quot;Splunk está disponível em: http://localhost:8000&quot;&#10;echo &quot;Usuário: admin&quot;&#10;echo &quot;Senha: SenhaForte123&quot;&#10;echo &quot;HEC Token: 32bb54a7-646a-4d3e-bf65-3cbbd9075a56&quot;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/db/migrate/20250730180000_rename_created_at_and_updated_at_in_tb_customers.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/db/migrate/20250730180000_rename_created_at_and_updated_at_in_tb_customers.rb" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/splunk/Dockerfile">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/splunk/Dockerfile" />
              <option name="originalContent" value="FROM splunk/splunk:latest&#10;&#10;USER root&#10;&#10;COPY splunk/init.sh /opt/splunk/bin/init.sh&#10;RUN chmod +x /opt/splunk/bin/init.sh&#10;RUN chmod +x /opt/splunk/bin/init.sh&#10;USER splunk&#10;&#10;CMD [&quot;/opt/splunk/bin/init.sh&quot;]&#10;&#10;&#10;&#10;&#10;CMD [&quot;/opt/splunk/bin/init.sh&quot;]&#10;&#10;&#10;" />
              <option name="updatedContent" value="FROM splunk/splunk:latest&#10;&#10;USER root&#10;&#10;COPY splunk/init.sh /opt/splunk/bin/init.sh&#10;RUN chmod +x /opt/splunk/bin/init.sh&#10;RUN chmod +x /opt/splunk/bin/init.sh&#10;USER splunk&#10;&#10;CMD [&quot;/opt/splunk/bin/init.sh&quot;]&#10;&#10;&#10;&#10;&#10;CMD [&quot;/opt/splunk/bin/init.sh&quot;]&#10;&#10;&#10;# Usa o entrypoint padrão do Splunk&#10;# O script de configuração será executado após o Splunk iniciar" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>