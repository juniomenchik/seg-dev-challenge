services:

  ruby_app:
    container_name: ruby_app
    build: .
    restart: always
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - splunk
    networks:
      - internal-network

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - internal-network

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "5400:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - internal-network

  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_PASSWORD=SenhaForte123
      - SPLUNK_HEC_TOKEN=32bb54a7-646a-4d3e-bf65-3cbbd9075a56

    ports:
      - "8000:8000"
      - "8088:8088"
      - "8089:8089"
    networks:
      - internal-network
    volumes:
      - splunk-data:/opt/splunk/var
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/en-US/account/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

networks:
  internal-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  splunk-data:
  grafana-storage: